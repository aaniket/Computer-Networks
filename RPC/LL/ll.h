/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _LL_H_RPCGEN
#define _LL_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct node {
	int val;
	struct node *next;
};
typedef struct node node;

struct square_out {
	node *head;
};
typedef struct square_out square_out;

#define SQUARE_PROG 0x31230000
#define SQUARE_VERS1 1

#if defined(__STDC__) || defined(__cplusplus)
#define SQUAREPROC 1
extern  square_out * squareproc_1(node *, CLIENT *);
extern  square_out * squareproc_1_svc(node *, struct svc_req *);
#define fuck 2
extern  square_out * fuck_1(node *, CLIENT *);
extern  square_out * fuck_1_svc(node *, struct svc_req *);
extern int square_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define SQUAREPROC 1
extern  square_out * squareproc_1();
extern  square_out * squareproc_1_svc();
#define fuck 2
extern  square_out * fuck_1();
extern  square_out * fuck_1_svc();
extern int square_prog_1_freeresult ();
#endif /* K&R C */
#define SQUARE_VERS2 2

#if defined(__STDC__) || defined(__cplusplus)
#define fun1 1
extern  square_out * fun1_2(node *, CLIENT *);
extern  square_out * fun1_2_svc(node *, struct svc_req *);
extern int square_prog_2_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define fun1 1
extern  square_out * fun1_2();
extern  square_out * fun1_2_svc();
extern int square_prog_2_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_node (XDR *, node*);
extern  bool_t xdr_square_out (XDR *, square_out*);

#else /* K&R C */
extern bool_t xdr_node ();
extern bool_t xdr_square_out ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_LL_H_RPCGEN */
